@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Exercise 02";
    var db = Database.Open("CHDB"); //open chinook database

    var artistsName = Request.QueryString["cid"];
    var partialString = "%" + artistsName + "%"; //make sure the SQL doesn't just search for exact terms



    var artistQuery = "SELECT ArtistId, Name " +
                    "FROM Artists " +
                    "WHERE Name like @0 " +
                    "ORDER BY Name";

    var artistTable = db.Query(artistQuery, partialString); //use the partial string to actually search for all possible artists. Do not require over specificity.

    var selectedArtist = "";
}
@section banner{
    <span style="font-size:xx-large"><strong>Artists Selection</strong></span>
    @if (string.IsNullOrEmpty(artistsName)) //if there's no data, return to start, do not collect $200
    {
        Response.Redirect("Exercise02A.cshtml");
    }
}

@if (IsPost)
{

    selectedArtist = Request.Form["CategoryList"]; //update selected artist with whatever has been selected
    if(selectedArtist.Equals("0"))  //0 is the 'select' option, so its nothing, tell the user to actually do the thing
    {
        <p>You must make a selection</p>
    }
    else
    {
        Response.Redirect("Exercise02C.cshtml?cid=" + selectedArtist); //they've selected well, send them to the display page. Give the display page their selection.
    }
    
}


<div>
    <form id="EX01" method="post">
        <div class="row">
            <div class="col-md-2">
                <label> Select an Artist's Name</label><br />
                <select id ="CategoryList" name="CategoryList"> <!-- have user select from a list generated by the DB query-->
                    <option value="0">select ...</option>
                    @foreach (var item in artistTable)
                    {
                        //loop through the collection of records in the ddlResults
                        //create a line in the ddl for each item (category) in ddlResults
                        //referencing of the data items on each row
                        //    is done using either the [index] technique
                        //    or using the properties (.ColumnTitleName)
                        //    to point to the specific data
                        <option value="@item[0]">@item.Name</option>
                    }
                </select><br /><br />
            </div>
        </div>
        <br />
        <div class="row"> <!-- clear is not required here, only one button-->
            &nbsp;&nbsp;&nbsp;&nbsp;
            <button type="submit" id="PressMe" name="theButton" value="submit">Fetch Albums</button>
            &nbsp;&nbsp;
        </div>


    </form>
</div>
@section footer{
    <p>&copy CPSC1517, Nait Today's date is @DateTime.Today.ToLongDateString().</p> }