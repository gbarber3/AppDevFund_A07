@{
    Page.Title = "Insert";
    Layout = "~/_LayoutMenu.cshtml";

    var formbutton = Request.Form["FormButton"];

    var productname = "";
    var selectedsupplier = "";
    var selectedcategory = "";
    var quantityperunit = "";
    var unitprice = "";
    var unitsinstock = "";
    var unitsonorder = "";
    var reorderlevel = "";
    var discontinued = "";

    //connect to the database
    var db = Database.Open("NWDB");
    var supplierquery = "SELECT SupplierID, CompanyName "
                + "FROM Suppliers "
                + "ORDER BY 2";
    var categoryquery = "SELECT CategoryID, CategoryName "
                        + "FROM Categories "
                        + "ORDER BY 2";
    var supplierlist = db.Query(supplierquery);
    var categorylist = db.Query(categoryquery);

    Validation.Add("ProductName", Validator.Required("Product Name is Required"));
}

@section banner{
    <span style="font-size:xx-large"><strong>CRUD: Insert</strong></span>
}
@if (IsPost)
{
    if (formbutton.Equals("reset"))
    {
        <p class="col-sm-11 text-center">Cleared by user</p>
        discontinued = "";
    }

    else if (Validation.IsValid() == true)
    {
        //collect the data from the input controls
        productname = Request.Form["ProductName"];
        selectedsupplier = Request.Form["Supplier"];
        selectedcategory = Request.Form["Category"];
        quantityperunit = Request.Form["QuantityPerUnit"];
        unitprice = Request.Form["UnitPrice"];
        unitsinstock = Request.Form["UnitsInStock"];
        unitsonorder = Request.Form["UnitsOnOrder"];
        reorderlevel = Request.Form["ReorderLevel"];
        //checkboxs return null (not checked) and "on" (checked)
        discontinued = Request.Form["Discontinued"];

        //all of this needs to be warpped inside a Try/Catch
        try
        {

            //does the sql table generate the primary key?
            //create an sql Insert command
            var insertcommand = "INSERT INTO Products (ProductName, SupplierID, "
                            + "CategoryID, QuantityPerUnit, UnitPrice, UnitsInStock, "
                            + "UnitsOnOrder, ReorderLevel, Discontinued) "
                            + "VALUES(@0,@1,@2,@3,@4,@5,@6,@7,@8)";
            //run the Insert command
            db.Execute(insertcommand, productname,
                string.IsNullOrEmpty(selectedsupplier) ? null : selectedsupplier,
                string.IsNullOrEmpty(selectedcategory) ? null : selectedcategory,
                string.IsNullOrEmpty(quantityperunit) ? null : quantityperunit,
                string.IsNullOrEmpty(unitprice) ? null : unitprice,
                string.IsNullOrEmpty(unitsinstock) ? null : unitsinstock,
                string.IsNullOrEmpty(unitsonorder) ? null : unitsonorder,
                string.IsNullOrEmpty(reorderlevel) ? null : reorderlevel,
                string.IsNullOrEmpty(discontinued) ? 0 : 1);
            <p class="col-sm-11 text-center">
                <span style="color:green">
                    New product added to file
                </span>
            </p>

        }
        catch (Exception ex)
        {
            <p class="col-sm-11 text-center">
                <span style="color:firebrick">
                    <strong>@ex.Message</strong>
                </span>
            </p>
        }
    }
}
else
{
    //initialized values for input controls
    //that will be used on the first pass of the page
}
<div>
    <form id="theForm" action="" method="post">
        <div class="row">

            <div class="col-sm-5 text-right">
                <label id="forProductName">Name:</label><br />
                <label id="forSupplier">Supplier:</label><br />
                <label id="forCategory">Category:</label><br />
                <label id="forQuantityPerUnit">Qty/Unit:</label><br />
                <label id="forUnitPrice">Price:</label><br />
                <label id="forUnitsInStock">QOH:</label><br />
                <label id="forUnitsOnOrder">QOO:</label><br />
                <label id="forReorderLevel">ROL:</label><br />
                <label id="forDiscontinued">Disc.:</label><br />
            </div>
            <div class="col-sm-6">
                <input type="text" name="ProductName" id="ProductName" value="@productname"
                       placeholder="product name" />@Html.ValidationMessage("ProductName")<br />
                <select id="Supplier" name="Supplier">
                    <option value="0">select ...</option>
                    @foreach (var item in supplierlist)
                    {
                        if (selectedsupplier.Equals(item[0].ToString()))
                        {
                            <option value="@item[0]" selected>@item.CompanyName</option>
                        }
                        else
                        {
                            <option value="@item[0]">@item.CompanyName</option>
                        }

                    }
                </select><br />
                <select id="Category" name="Category">
                    <option value="0">select ...</option>
                    @foreach (var item in categorylist)
                    {
                        if (selectedcategory.Equals(item[0].ToString()))
                        {
                            <option value="@item.CategoryID" selected>@item[1]</option>
                        }
                        else
                        {
                            <option value="@item.CategoryID">@item[1]</option>
                        }

                    }
                </select><br />
                <input type="text" name="QuantityPerUnit" id="QuantityPerUnit" value="@quantityperunit" /><br />
                <input type="text" name="UnitPrice" id="UnitPrice" value="@unitprice" /><br />
                <input type="text" name="UnitsInStock" id="UnitsInStock" value="@unitsinstock"
                       title="Quantity currently in inventory." /><br />
                <input type="text" name="UnitsOnOrder" id="UnitsOnOrder" value="@unitsonorder"
                       title="Quantity currently on Order." /><br />
                <input type="text" name="ReorderLevel" id="ReorderLevel" value="@reorderlevel"
                       title="Quantity safety level." /><br />
                <input type="checkbox" name="Discontinued"
                       title="Product is dicontinued if checked."
                       @(string.IsNullOrEmpty(discontinued) ? "" : "checked") /><br />
            </div>
        </div>

        <div class="row">

            <div class="col-sm-11 text-center">
                <button type="submit" name="FormButton" value="submit"
                        class="btn btn-primary" style="width:90px">
                    Add
                </button>
                &nbsp;&nbsp;
                <button type="submit" name="FormButton" value="reset"
                        class="btn" style="width:90px">
                    Clear
                </button>
            </div>
        </div>
    </form>
</div>